{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputEl=document.querySelector(\"#datetime-picker\");\nconst btnEl=document.querySelector(\"[data-start]\");\nconst daysEl=document.querySelector(\"[data-days]\");\nconst hoursEl=document.querySelector(\"[data-hours]\");\nconst minEl=document.querySelector(\"[data-minutes]\");\nconst secEl=document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate=null;\nlet userInterval=null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if(selectedDates[0]<=new Date()){\n        iziToast.error({message:\"Please choose a date in the future\", position:\"topRight\"});\n        btnEl.disabled=true;\n    } else {\n        userSelectedDate=selectedDates[0];\n        btnEl.disabled=false;\n        console.log(userSelectedDate);\n    };\n  },\n};\n\nflatpickr(inputEl, options);\nbtnEl.addEventListener(\"click\", onClick);\n\nfunction onClick(){\n    btnEl.disabled=true;\n    inputEl.disabled=true;\n    userInterval=setInterval(() => {\n    const dif=userSelectedDate-new Date();\n    if(dif<=0){\n        inputEl.disabled=false;\n        clearInterval(userInterval);\n        iziToast.success({message: \"Finished\", position: \"topRight\"});\n        return;\n    };\n        upDateTimer(convertMs(dif))\n    }, 1000);\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n};\n\nfunction upDateTimer({days, hours, minutes, seconds}){\n    daysEl.textContent=addZero(days);\n    hoursEl.textContent=addZero(hours);\n    minEl.textContent=addZero(minutes);\n    secEl.textContent=addZero(seconds);\n};\n\nfunction addZero(value){\n    return String(value).padStart(2, \"0\");\n}\n"],"names":["inputEl","btnEl","daysEl","hoursEl","minEl","secEl","userSelectedDate","userInterval","options","selectedDates","iziToast","flatpickr","onClick","dif","upDateTimer","convertMs","ms","days","hours","minutes","seconds","addZero","value"],"mappings":"0IAOA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAEnD,IAAIC,EAAiB,KACjBC,EAAa,KAEjB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAClBA,EAAc,CAAC,GAAG,IAAI,MACrBC,EAAS,MAAM,CAAC,QAAQ,qCAAsC,SAAS,UAAU,CAAC,EAClFT,EAAM,SAAS,KAEfK,EAAiBG,EAAc,CAAC,EAChCR,EAAM,SAAS,GACf,QAAQ,IAAIK,CAAgB,EAEjC,CACH,EAEAK,EAAUX,EAASQ,CAAO,EAC1BP,EAAM,iBAAiB,QAASW,CAAO,EAEvC,SAASA,GAAS,CACdX,EAAM,SAAS,GACfD,EAAQ,SAAS,GACjBO,EAAa,YAAY,IAAM,CAC/B,MAAMM,EAAIP,EAAiB,IAAI,KAC/B,GAAGO,GAAK,EAAE,CACNb,EAAQ,SAAS,GACjB,cAAcO,CAAY,EAC1BG,EAAS,QAAQ,CAAC,QAAS,WAAY,SAAU,UAAU,CAAC,EAC5D,MACR,CACQI,EAAYC,EAAUF,CAAG,CAAC,CAC7B,EAAE,GAAI,CACX,CAEA,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASN,EAAY,CAAC,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAE,CACjDlB,EAAO,YAAYmB,EAAQJ,CAAI,EAC/Bd,EAAQ,YAAYkB,EAAQH,CAAK,EACjCd,EAAM,YAAYiB,EAAQF,CAAO,EACjCd,EAAM,YAAYgB,EAAQD,CAAO,CACrC,CAEA,SAASC,EAAQC,EAAM,CACnB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}